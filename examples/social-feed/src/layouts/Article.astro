---
import type { CollectionEntry } from 'astro:content';
import Layout, { type Props as LayoutProps } from './Base.astro';
import ArticleHeader from '../components/ArticleHeader.astro';
import Icon from '../components/Icon.astro';
import Prose from '../components/Prose.astro';

export interface Props extends LayoutProps {
	article: CollectionEntry<'posts'>;
	next?: CollectionEntry<'posts'>;
	prev?: CollectionEntry<'posts'>;
}

const { article, next, prev } = Astro.props;

const { Content, headings } = await article.render();
---

<Layout ...Astro.props} wrapperReverse>
	<ArticleHeader {article} class="header" />

	<Prose class="content">
		<Content />
	</Prose>

	{
		headings.length > 0 && (
			<aside>
				<h3>Table of contents</h3>
				<ul>
					{headings.map(({ slug, text }) => (
						<li>
							<a href={`${Astro.url.pathname}#${slug}`}>{text}</a>
						</li>
					))}
				</ul>
			</aside>
		)
	}

	{
		(next || prev) && (
			<footer>
				{prev && (
					<a href={`/post/${prev.slug}`} class="prev">
						<Icon icon="arrow-left" size="1.25rem" color="var(--theme-accent-dark)" />
						<span>Previous: {prev.data.title}</span>
					</a>
				)}
				{next && (
					<a href={`/post/${next.slug}`} class="next">
						<span>Next: {next.data.title}</span>
						<Icon icon="arrow-right" size="1.25rem" color="var(--theme-accent-dark)" />
					</a>
				)}
			</footer>
		)
	}
</Layout>

<style>
	.header,
	footer {
		grid-column: 1 / -1;
	}

	footer {
		display: flex;
		justify-content: space-between;
	}

	footer a {
		font-weight: 700;
		text-decoration: none;
	}

	.next:first-child {
		margin-inline-start: auto;
	}

	aside {
		display: none;
	}

	aside ul {
		list-style: none;
		padding: 0;
		margin-top: 1.25em;
	}

	aside ul > * + * {
		margin-block-start: 0.75em;
	}

	aside a {
		font-weight: bold;
		text-decoration: none;
	}

	@media (min-width: 50em) {
		aside {
			display: block;
		}
	}
</style>
